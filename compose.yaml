---
services:

  downly:
    build: .
    volumes:
      - "./downloads:/app/downloads"
      - "./config.yaml:/app/config.yaml"
    restart: unless-stopped # restart the bot if it crashes
    depends_on:
      - postgres
      - rabbitmq
    
  
  # worker
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - "./downloads:/app/downloads"
      - "./config.yaml:/app/config.yaml"
    restart: unless-stopped # restart the worker if it crashes
    depends_on:
      - rabbitmq
    command: ["/app/worker", "-config", "/app/config.yaml"]

  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://postgres:5432/downly -user=downly -password=downly -baselineOnMigrate=true migrate
    volumes:
      - "./downly/database/migrations:/flyway/sql"
    depends_on:
      - postgres

  postgres:
    image: postgres:13.3-alpine
    environment:
      POSTGRES_USER: downly
      POSTGRES_PASSWORD: downly
      POSTGRES_DB: downly
    volumes:
      - "./postgres-data:/var/lib/postgresql/data"
    restart: unless-stopped # restart the postgres if it crashes


  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: downly
      RABBITMQ_DEFAULT_PASS: downly
    volumes:
      - "./rabbitmq_data:/var/lib/rabbitmq"